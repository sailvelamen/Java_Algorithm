import java.util.Scanner;

//前提是数组已经排序好了
/*
* 基本原理：
* 首先将要查找的元素(key)与数组的中间元素比较
* 1、如果key小于中间元素，只需要在数组的前一半元素中继续查找
* 2、如果(key)和中间元素相等，匹配成功，查找结束
* 3、如果(key)大于中间元素，只需要在数组的后一般元素中继续查找key
*
* */
public class Test {
    public static void main(String[] args){

        Scanner input = new Scanner(System.in);
        int[] array = {2,5,8,10,15,35,45,55,65,75,95,95};
        System.out.print("请输入要查找的数字：");
        int searchNum = input.nextInt();
        boolean isFind = false; //是否找到
        int low = 0;            //下界下标
        int high = array.length - 1;//上界下标
            //不知道要查找几次！
        while(high >= low){
            //计算中点下标
            int mid = (high + low) / 2;
            //如果key小于中间元素，只需要在数组的前一半元素中继续查找
            if(searchNum < array[mid]){
                high = mid - 1;
            }else if(searchNum> array[mid]){//如果(key)大于中间元素，只需要在数组的后一般元素中继续查找key
                low = mid + 1;
            }else{//如果(key)和中间元素相等，匹配成功，查找结束
                System.out.println("找到了数字！下标为：" + mid);
                isFind = true;
                break;
            }
        }
        if(!isFind){
            System.out.printf("没有找到数字！！！");
        }
    }
}
